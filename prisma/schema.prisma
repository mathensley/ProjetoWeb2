generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  DOCE
  BOLO
  BEBIDA
}

model Admin {
  id              String          @id @default(uuid())
  name            String
  password        String
  cpf             String          @unique @db.Char(11)

  establishment   Establishment?
}

model Client {
  id              String          @id @default(uuid())
  name            String
  username        String
  password        String
  cpf             String          @unique @db.Char(11)
  email           String
  phone           String
  address         String
  city            String
  state           String          @db.Char(2)
  cep             String
  created_at      DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  establishment   Establishment?  @relation(fields: [establishmentId], references: [id])
  establishmentId String?

  cart            Cart?
}

model DeliveryRider {
  id              String          @id @default(uuid())
  name            String
  password        String
  license_plate   String          @unique
  cpf             String          @unique @db.Char(11)
  created_at      DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  establishment   Establishment?  @relation(fields: [establishmentId], references: [id])
  establishmentId String?
}

model Product {
  id              String          @id @default(uuid())
  name            String          @unique
  description     String?
  image           String?
  category        Category
  price           Decimal
  promotion       Boolean         @default(false)
  created_at      DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  establishment   Establishment?  @relation(fields: [establishmentId], references: [id])
  establishmentId String?

  cartItems       CartItem[]
}

model Establishment {
  id              String          @id @default(uuid())
  name            String
  address         String
  city            String
  state           String
  cep             String
  email           String
  phone           String

  admin           Admin           @relation(fields: [adminId], references: [id])
  adminId         String          @unique
  clients         Client[]
  deliveryRiders  DeliveryRider[]
  products        Product[]
}

model Cart {
  id              String         @id @default(uuid())
  client          Client         @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId        String         @unique
  items           CartItem[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model CartItem {
  id              String   @id @default(uuid())
  cart            Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId          String
  product         Product  @relation(fields: [productId], references: [id])
  productId       String
  quantity        Int      @default(1)

  @@unique([cartId, productId])
}

model User {
  id            String    @id @default(uuid())
  name          String
  cpf           String    @unique
  password      String
  role          String

  @@map("users")
}